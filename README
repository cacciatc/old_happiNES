-Why?-
	Although there are a lot of NES emulators available I still felt the need to start building one because:
		-A few years ago I would never thought I would be smart enough or have the necessary skills to do so.
		-I wanted an excuse to use Ragel for a project.
		-If this project goes well, I am interested in providing better network support, since that seems to be lacking in most of the NES emulators I have used.

-Version-
	0.1

-Roadmap-
	Following is a general guideline leading up to version 1.0:
		-0.2  Complete 2a03 core (including sound).
		-0.3  Complete PPU (Picture Processing Unit).
		-0.4  Support iNES ROMS and certain MMUs.
		-0.5  GUI.
		-0.6  Savestate functionality.
		-0.7  Recording.
		-0.8  Networking.
		-0.9  ROM support check and finished undocumented opcodes.
		-1.0  Fully functional emulator.

-Running-
	To build the application move to the src directory and type "make".  This will create an executable called "happiNES in the root directory of this package.  To build a test harness to test the 2a03 instruction set type "make test" in src and then run the test suite using "ruby tests/run_test.rb"

-License-
	Please check the license file for more information.

-Directory Contents-
/src
	-Contains Ragel and C/C++ source files
/tests
	-Contains test files broken into suites based on instruction type as well as a few general categories.
README
	-This file.
LICENSE
	-Licensing file.
NOTES
	-Contains notes on the tools used as well as happiNES' design.

-Dependencies-
	-ragel 
	-SDL
	-ruby (for running tests)
	-g++

-Resources-
	We are currently using the following sites for opcode specs:
		-http://www.obelisk.demon.co.uk/6502/
		-http://nesdev.parodius.com/undocumented_opcodes.txt
